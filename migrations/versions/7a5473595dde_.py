"""empty message

Revision ID: 7a5473595dde
Revises: c57e199ff06c
Create Date: 2019-12-02 00:10:38.089573

"""
from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
from app.main.seed.expense_types import seed_expense_type_values
from app.main.seed.income_types import seed_income_types

revision = '7a5473595dde'
down_revision = '9ba9cdca1f5f'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    expense_types = op.create_table('expense_types',
                                    sa.Column('id', sa.Integer(), nullable=False),
                                    sa.Column('inserted_on', sa.DateTime(), nullable=False),
                                    sa.Column('name', sa.String(length=50), nullable=False),
                                    sa.Column('display_name', sa.String(length=100), nullable=False),
                                    sa.Column('description', sa.Text(), nullable=True),
                                    sa.PrimaryKeyConstraint('id'),
                                    sa.UniqueConstraint('display_name'),
                                    sa.UniqueConstraint('name')
                                    )
    op.create_table('income_sources',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('inserted_on', sa.DateTime(), nullable=False),
                    sa.Column('value', sa.Integer(), nullable=False),
                    sa.Column('frequency', sa.Enum('ANNUAL', 'MONTHLY', name='frequency'), nullable=False),
                    sa.Column('income_type_id', sa.Integer(), nullable=False),
                    sa.PrimaryKeyConstraint('id'),
                    sa.ForeignKeyConstraint(['income_type_id'], ['income_types.id'], ),
                    )
    income_types = op.create_table('income_types',
                                   sa.Column('id', sa.Integer(), nullable=False),
                                   sa.Column('inserted_on', sa.DateTime(), nullable=False),
                                   sa.Column('name', sa.String(length=50), nullable=False),
                                   sa.Column('display_name', sa.String(length=100), nullable=False),
                                   sa.Column('description', sa.Text(), nullable=True),
                                   sa.PrimaryKeyConstraint('id'),
                                   sa.UniqueConstraint('display_name'),
                                   sa.UniqueConstraint('name')
                                   )
    op.create_table('monthly_expenses',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('inserted_on', sa.DateTime(), nullable=False),
                    sa.Column('value', sa.Integer(), nullable=False),
                    sa.Column('expense_type_id', sa.Integer(), nullable=False),
                    sa.PrimaryKeyConstraint('id'),
                    sa.ForeignKeyConstraint(['expense_type_id'], ['expense_types.id'], ),
                    )
    op.create_table('client_income_sources',
                    sa.Column('client_id', sa.Integer(), nullable=False),
                    sa.Column('income_id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], ),
                    sa.ForeignKeyConstraint(['income_id'], ['income_sources.id'], ),
                    sa.PrimaryKeyConstraint('client_id', 'income_id')
                    )
    op.create_table('client_monthly_expenses',
                    sa.Column('candidate_id', sa.Integer(), nullable=False),
                    sa.Column('expense_id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['candidate_id'], ['clients.id'], ),
                    sa.ForeignKeyConstraint(['expense_id'], ['monthly_expenses.id'], ),
                    sa.PrimaryKeyConstraint('candidate_id', 'expense_id')
                    )
    op.create_table('candidate_income_sources',
                    sa.Column('candidate_id', sa.Integer(), nullable=False),
                    sa.Column('income_id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['candidate_id'], ['candidates.id'], ),
                    sa.ForeignKeyConstraint(['income_id'], ['income_sources.id'], ),
                    sa.PrimaryKeyConstraint('candidate_id', 'income_id')
                    )
    op.create_table('candidate_monthly_expenses',
                    sa.Column('candidate_id', sa.Integer(), nullable=False),
                    sa.Column('expense_id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['candidate_id'], ['candidates.id'], ),
                    sa.ForeignKeyConstraint(['expense_id'], ['monthly_expenses.id'], ),
                    sa.PrimaryKeyConstraint('candidate_id', 'expense_id')
                    )
    with op.batch_alter_table('candidates', schema=None) as batch_op:
        batch_op.add_column(sa.Column('employment_status',
                                      sa.Enum('EMPLOYED', 'RETIRED', 'STUDENT', 'UNEMPLOYED', name='employmentstatus'),
                                      nullable=True))

    with op.batch_alter_table('clients', schema=None) as batch_op:
        batch_op.add_column(sa.Column('client_id', sa.String(length=12), nullable=False))
        batch_op.add_column(sa.Column('county', sa.String(length=50), nullable=True))
        batch_op.add_column(sa.Column('employment_status',
                                      sa.Enum('EMPLOYED', 'RETIRED', 'STUDENT', 'UNEMPLOYED', name='employmentstatus'),
                                      nullable=True))

    op.bulk_insert(income_types, seed_income_types())
    op.bulk_insert(expense_types, seed_expense_type_values())

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('clients', schema=None) as batch_op:
        batch_op.drop_column('employment_status')
        batch_op.drop_column('county')
        batch_op.drop_column('client_id')

    with op.batch_alter_table('candidates', schema=None) as batch_op:
        batch_op.drop_column('employment_status')

    op.drop_table('candidate_monthly_expenses')
    op.drop_table('candidate_income_sources')
    op.drop_table('candidate_contact_numbers')
    op.drop_table('client_monthly_expenses')
    op.drop_table('client_income_sources')
    op.drop_table('monthly_expenses')
    op.drop_table('income_types')
    op.drop_table('income_sources')
    op.drop_table('expense_types')
    # ### end Alembic commands ###
