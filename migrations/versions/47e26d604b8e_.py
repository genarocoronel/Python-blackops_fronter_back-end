"""empty message

Revision ID: 47e26d604b8e
Revises: fa012eec87c1
Create Date: 2019-12-03 18:33:35.860755

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '47e26d604b8e'
down_revision = 'fa012eec87c1'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('contact_number_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('inserted_on', sa.DateTime(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('bank_accounts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('inserted_on', sa.DateTime(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=125), nullable=False),
    sa.Column('account_number', sa.String(length=100), nullable=False),
    sa.Column('routing_number', sa.String(length=100), nullable=False),
    sa.Column('valid', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('contact_numbers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('inserted_on', sa.DateTime(), nullable=False),
    sa.Column('contact_number_type_id', sa.Integer(), nullable=True),
    sa.Column('phone_number', sa.String(length=20), nullable=False),
    sa.Column('preferred', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['contact_number_type_id'], ['contact_number_types.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('candidate_contact_number',
    sa.Column('candidate_id', sa.Integer(), nullable=False),
    sa.Column('contact_number_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['candidate_id'], ['candidates.id'], ),
    sa.ForeignKeyConstraint(['contact_number_id'], ['contact_numbers.id'], ),
    sa.PrimaryKeyConstraint('candidate_id', 'contact_number_id')
    )
    op.create_table('credit_report_data',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('candidate_id', sa.Integer(), nullable=True),
    sa.Column('public_id', sa.String(length=100), nullable=True),
    sa.Column('debt_name', sa.String(length=100), nullable=True),
    sa.Column('creditor', sa.String(length=100), nullable=True),
    sa.Column('ecoa', sa.String(length=50), nullable=True),
    sa.Column('account_number', sa.String(length=25), nullable=True),
    sa.Column('account_type', sa.String(length=100), nullable=True),
    sa.Column('push', sa.Boolean(), nullable=True),
    sa.Column('last_collector', sa.String(length=100), nullable=True),
    sa.Column('collector_account', sa.String(length=100), nullable=True),
    sa.Column('last_debt_status', sa.String(length=100), nullable=True),
    sa.Column('bureaus', sa.String(length=100), nullable=True),
    sa.Column('days_delinquent', sa.String(length=20), nullable=True),
    sa.Column('balance_original', sa.String(length=20), nullable=True),
    sa.Column('payment_amount', sa.String(length=20), nullable=True),
    sa.Column('credit_limit', sa.String(length=20), nullable=True),
    sa.Column('graduation', sa.String(length=30), nullable=True),
    sa.Column('last_update', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['candidate_id'], ['candidates.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('public_id')
    )
    op.create_table('scrape_tasks',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=True),
    sa.Column('description', sa.String(length=128), nullable=True),
    sa.Column('candidate_id', sa.Integer(), nullable=True),
    sa.Column('inserted_on', sa.DateTime(), nullable=False),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.Column('complete', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['candidate_id'], ['candidates.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_scrape_tasks_name'), 'scrape_tasks', ['name'], unique=False)
    op.drop_column('clients', 'county')
    op.drop_column('clients', 'crrt')
    op.drop_column('clients', 'dpbc')
    op.drop_column('clients', 'fips')
    op.add_column('credit_report_accounts', sa.Column('email', sa.String(length=30), nullable=True))
    op.add_column('credit_report_accounts', sa.Column('registered_fraud_insurance', sa.Boolean(), nullable=False))
    op.create_unique_constraint(None, 'credit_report_accounts', ['email'])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'credit_report_accounts', type_='unique')
    op.drop_column('credit_report_accounts', 'registered_fraud_insurance')
    op.drop_column('credit_report_accounts', 'email')
    op.add_column('clients', sa.Column('fips', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('clients', sa.Column('dpbc', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('clients', sa.Column('crrt', sa.VARCHAR(length=4), autoincrement=False, nullable=False))
    op.add_column('clients', sa.Column('county', sa.VARCHAR(length=50), autoincrement=False, nullable=False))
    op.drop_index(op.f('ix_scrape_tasks_name'), table_name='scrape_tasks')
    op.drop_table('scrape_tasks')
    op.drop_table('credit_report_data')
    op.drop_table('candidate_contact_number')
    op.drop_table('contact_numbers')
    op.drop_table('bank_accounts')
    op.drop_table('contact_number_types')
    # ### end Alembic commands ###
