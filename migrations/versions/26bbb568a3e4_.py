"""empty message

Revision ID: 26bbb568a3e4
Revises: 257ec1874a37
Create Date: 2020-08-07 12:50:30.347749

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '26bbb568a3e4'
down_revision = '257ec1874a37'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('rac_permission',
    sa.Column('rac_role_id', sa.Integer(), nullable=False),
    sa.Column('resource_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['rac_role_id'], ['rac_role.id'], name='fk_rac_permission_rac_role_id'),
    sa.ForeignKeyConstraint(['resource_id'], ['rac_resource.id'], name='fk_rac_permission_resource_id'),
    sa.PrimaryKeyConstraint('rac_role_id', 'resource_id')
    )
    op.drop_table('rac_policy')
    op.add_column('rac_resource', sa.Column('name', sa.String(length=100), nullable=False))
    op.drop_constraint('rac_resource_public_id_key', 'rac_resource', type_='unique')
    op.create_unique_constraint('rac_resource_name_key', 'rac_resource', ['name'])
    op.drop_column('rac_resource', 'action')
    op.drop_column('rac_resource', 'public_id')
    op.drop_column('rac_resource', 'inserted_on')
    op.drop_column('rac_resource', 'resource')
    op.drop_column('rac_resource', 'updated_on')
    op.drop_column('rac_resource', 'sub_resource')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('rac_resource', sa.Column('sub_resource', sa.VARCHAR(length=50), autoincrement=False, nullable=True))
    op.add_column('rac_resource', sa.Column('updated_on', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('rac_resource', sa.Column('resource', sa.VARCHAR(length=30), autoincrement=False, nullable=True))
    op.add_column('rac_resource', sa.Column('inserted_on', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('rac_resource', sa.Column('public_id', sa.VARCHAR(length=100), autoincrement=False, nullable=True))
    op.add_column('rac_resource', sa.Column('action', sa.VARCHAR(length=125), autoincrement=False, nullable=True))
    op.drop_constraint('rac_resource_name_key', 'rac_resource', type_='unique')
    op.create_unique_constraint('rac_resource_public_id_key', 'rac_resource', ['public_id'])
    op.drop_column('rac_resource', 'name')
    op.create_table('rac_policy',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('public_id', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('inserted_on', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_on', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('is_deny', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('rac_role_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('resource_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['rac_role_id'], ['rac_role.id'], name='fk_rac_policy_rac_role_id'),
    sa.ForeignKeyConstraint(['resource_id'], ['rac_resource.id'], name='fk_rac_policy_resource_id'),
    sa.PrimaryKeyConstraint('id', name='rac_policy_pkey'),
    sa.UniqueConstraint('public_id', name='rac_policy_public_id_key')
    )
    op.drop_table('rac_permission')
    op.execute('DELETE FROM rac_resource')
    # ### end Alembic commands ###
